Index: app/src/main/java/com/example/cat_caring/ui/activity/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cat_caring.ui.activity;\r\n\r\n\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\n\r\nimport com.example.cat_caring.MyDatabaseHelper;\r\nimport com.example.cat_caring.db.User;\r\n\r\n\r\npublic class UserService {\r\n    private MyDatabaseHelper dbHelper;\r\n    public UserService(Context context){\r\n        dbHelper=new MyDatabaseHelper(context);\r\n    }\r\n\r\n    public boolean login(String username,String password){\r\n        SQLiteDatabase sdb=dbHelper.getReadableDatabase();\r\n //       String sql=\"create table user(id integer primary key autoincrement,username varchar(20),password varchar(20),age integer,sex varchar(2))\";\r\n        //      sdb.execSQL(sql);\r\n //       String\r\n        String sql=\"select * from user where username=? and password=?\";\r\n\r\n        Cursor cursor=sdb.rawQuery(sql, new String[]{username,password});\r\n        if(cursor.moveToFirst()==true){\r\n            cursor.close();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public boolean register(User user){\r\n        SQLiteDatabase sdb=dbHelper.getReadableDatabase();\r\n        String sql=\"insert into user(username,password,age,sex) values(?,?,?,?)\";\r\n        Object obj[]={user.getUsername(),user.getPassword(),user.getAge(),user.getSex()};\r\n        sdb.execSQL(sql, obj);\r\n        return true;\r\n    }\r\n    public void inittable(){\r\n        SQLiteDatabase sdb=dbHelper.getReadableDatabase();\r\n        String sql=\"create table if not exists user(id integer primary key autoincrement,username varchar(20),password varchar(20),age integer,sex varchar(2))\";\r\n        sdb.execSQL(sql);\r\n        String sql1=\"create table if not exists cat(id integer primary key autoincrement,catname varchar(20),maose varchar(20),birthdate varchar(20),sex varchar(2),condition varchar(20),character varchar(100))\";\r\n        sdb.execSQL(sql1);\r\n        String sql2=\"create table if not exists donation(userid integer, maoliang integer,maobohe integer,maosha integer,maoguantou integer,donationcount integer, foreign key(userid) REFERENCES user(id))\";\r\n        sdb.execSQL(sql2);\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/cat_caring/ui/activity/UserService.java	(revision c37b28219a367964d105d6cfddbce3f4ef76f946)
+++ app/src/main/java/com/example/cat_caring/ui/activity/UserService.java	(date 1607880810299)
@@ -31,6 +31,8 @@
     }
     public boolean register(User user){
         SQLiteDatabase sdb=dbHelper.getReadableDatabase();
+//        String sql1="create table user(id integer primary key autoincrement,username varchar(20),password varchar(20),age integer,sex varchar(2))";
+//        sdb.execSQL(sql1);
         String sql="insert into user(username,password,age,sex) values(?,?,?,?)";
         Object obj[]={user.getUsername(),user.getPassword(),user.getAge(),user.getSex()};
         sdb.execSQL(sql, obj);
@@ -40,11 +42,10 @@
         SQLiteDatabase sdb=dbHelper.getReadableDatabase();
         String sql="create table if not exists user(id integer primary key autoincrement,username varchar(20),password varchar(20),age integer,sex varchar(2))";
         sdb.execSQL(sql);
-        String sql1="create table if not exists cat(id integer primary key autoincrement,catname varchar(20),maose varchar(20),birthdate varchar(20),sex varchar(2),condition varchar(20),character varchar(100))";
+        String sql1="create table if not exists cat(id integer primary key autoincrement,catname varchar(20),maose varchar(20),birthdate varchar(20),sex varchar(2),condition varchar(20),character varchar(100),image BLOB)";
         sdb.execSQL(sql1);
         String sql2="create table if not exists donation(userid integer, maoliang integer,maobohe integer,maosha integer,maoguantou integer,donationcount integer, foreign key(userid) REFERENCES user(id))";
         sdb.execSQL(sql2);
 
-
     }
 }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision c37b28219a367964d105d6cfddbce3f4ef76f946)
+++ .idea/gradle.xml	(date 1607880737322)
@@ -14,6 +14,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1607880737295)
+++ .idea/compiler.xml	(date 1607880737295)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision c37b28219a367964d105d6cfddbce3f4ef76f946)
+++ .idea/misc.xml	(date 1607880737350)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
